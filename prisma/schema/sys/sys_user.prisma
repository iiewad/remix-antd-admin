model User {
  id           Int         @id @default(autoincrement()) @map("id")
  avatar       String?     @map("avatar")
  email        String?     @map("email")
  name         String      @map("name")
  nickname     String?     @map("nickname")
  password     String      @map("password")
  lang         String      @default("en-US") @map("lang")
  theme        String      @default("light") @map("theme")
  phone        String?     @map("phone")
  remark       String?     @map("remark")
  status       Int?        @map("status")
  createdAt    DateTime    @default(now()) @map("createdAt")
  updatedAt    DateTime?   @map("updatedAt")
  departmentId Int?        @map("department_id")
  department   Department? @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  UserRole     UserRole[]

  @@map("sys_user")
}

model UserRole {
  id        Int       @id @default(autoincrement()) @map("id")
  userId    Int       @map("user_id")
  roleId    Int       @map("role_id")
  createdAt DateTime  @default(now()) @map("createdAt")
  updatedAt DateTime? @map("updatedAt")
  roles     Role      @relation(fields: [roleId], references: [id])
  users     User      @relation(fields: [userId], references: [id])

  @@map("sys_user_role")
}

model UserSignLog {
  id        Int       @id @default(autoincrement())
  userId    Int
  signType  Int       @map("sign_type")
  signTime  DateTime  @map("sign_time")
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  @@map("user_sign_log")
}

model UserSign {
  id                   Int @id @default(autoincrement())
  userId               Int
  resignNums           Int @map("resign_nums")
  signedNums           Int @map("signed_nums")
  continuitySignedNums Int @map("continuity_signed_nums")

  @@map("user_sign")
}
